// Author: Yeon Kim
// Lab08 Report

From the users perspective:
There are two modes to the executable "playlife": the INTERACTIVE MODE and the BATCH MODE.
You can enter the INTERACTIVE MODE by not passing any arguments and BATCH MODE by passing
one argument that will be the name of a file.
In the INTERACTIVE MODE, the user is presented with a menu where he or she has the option
to either add cells by coordinates, remove cells by coordinates, advance the simulation
to the next step, indefinitely continue the simulation, or quit the program.


From the programmer's perspective:
The program consists of the interface, implementation, and the driver. The class Lifeboard
comes with many functions that are mostly self-explanatory. Each board is stored in a
character array of blanks (' ') and 'X's. The 'X's indicate that the cell is not empty and
the "Setup functions" (as indicated in lifeboard.h) places and removes the cells individually
by the coordinates of the character array. The "Check functions" return booleans depending on
if the cell is occupied or not and these functions are used to calculate the number of neighboring
cells. The function "findNeighbors" use the check function to see which cells surrounding the
cell in question have are occupied and returns the int value of the number of neighbors.
Depending on the number of neighbors, each filled cell is determined to survive and move
onto the next generation or die of underpopulation or overpopulation. Each empty cell is determined
to generate a new life if there are exactly three neighboring cells.

The functions nextBoard stores the previous board in to a tempBoard and from the tempBoard,
a new board is generated by parsing through every element of the character array.

The board is displayed using the displayLifeboard function.

Each instance of the board is displayed after the "clear" function of the system is called so that
the interface is presented nicely to the user.


Evaluating for correctness:
The simulations were compared with a web-based simulator online. Every simulation tested
seemed to match the web-based simulator (except simulations that crashed into edges since
my program treated everything outside the edges as an empty cell). If the user inputs a filename
that does not exist, the program will terminate with an error message.
